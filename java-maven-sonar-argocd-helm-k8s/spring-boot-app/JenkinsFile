pipeline {
  agent any

  environment {
    DOCKER_IMAGE = "vamshi589/springboot-image:${BUILD_NUMBER}"
    SONAR_URL = "http://65.1.114.65:9000/"
    GIT_REPO_NAME = "Jenkins"
    GIT_USER_NAME = "vamshireddy903"
    MANIFEST_FILE = "java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml"
  }

  stages {
    stage('Checkout') {
      steps {
        git branch: 'main', url: "https://github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git"
      }
    }

    stage('Build, Test, Sonar & Docker') {
      agent {
        docker {
          image 'vamshi589/maven-docker-agent:latest'
          args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
        }
      }
      stages {
        stage('Build and Test') {
          steps {
            sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
          }
        }

        stage('Static Code Analysis') {
          steps {
            withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
              sh '''
                cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
                mvn sonar:sonar \
                  -Dsonar.login=$SONAR_AUTH_TOKEN \
                  -Dsonar.host.url=$SONAR_URL
              '''
            }
          }
        }

        stage('Build and Push Docker Image') {
          steps {
            script {
              sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'

              def dockerImage = docker.image("${DOCKER_IMAGE}")
              docker.withRegistry('https://index.docker.io/v1/', 'dockerhub') {
                dockerImage.push()
              }
            }
          }
        }
      }
    }

    stage('Update Deployment File and Push') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'github', usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PASSWORD')]) {
          sh '''
            git config user.email "vamsi.xyz@gmail.com"
            git config user.name "Vamshireddy"

            # Replace image line in deployment manifest
            sed -i "s|image: vamshi589/springboot-image:.*|image: vamshi589/springboot-image:${BUILD_NUMBER}|" $MANIFEST_FILE

            git add $MANIFEST_FILE
            git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "No changes to commit"

            git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git HEAD:main
          '''
        }
      }
    }
  }
}
